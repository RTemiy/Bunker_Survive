class Card {
    constructor({ title, icon, text }) {
        this.title = title;
        this.icon = icon;
        this.text = text;
        this.selected=false;
    }
}

class Deck {
    constructor(id) {
        this.id = id;
        this.Cards = [];
        this.element = document.createElement('div');
        this.element.setAttribute('class', 'deckback');
        this.l1 = document.createElement('hr');
        this.element.onclick = () => { this.Flip() };
        this.Flip = () => {
            if (this.element.getAttribute('class') == 'deckfront') {
                this.element.setAttribute('class', 'deckback');
            }
            else if (this.element.getAttribute('class') == 'deckback') {
                this.element.setAttribute('class', 'deckfront');
            }
        }
        this.title = document.createElement('p');
        this.title.setAttribute('class', 'title');
        this.icon = document.createElement('p');
        this.icon.setAttribute('class', 'icon');
        this.text = document.createElement('p');
        this.text.setAttribute('class', 'text');
        this.element.appendChild(this.title);
        this.element.appendChild(this.l1);
        this.element.appendChild(this.icon);
        this.element.appendChild(this.text);
        document.body.appendChild(this.element);
        this.SetRnd = () => {
            let r = Math.floor(Math.random() * this.Cards.length);
            if(this.Cards[r].selected==true){
                this.SetRnd();
            }
            else{
            this.title.innerHTML = this.Cards[r].title;
            this.icon.innerHTML = this.Cards[r].icon;
            this.text.innerHTML = this.Cards[r].text;
            this.Cards[r].selected=true;
            }
        }
    }
}



var Pack = {};
//–ë–∏–æ–ª–æ–≥–∏—è
Pack.Biology = new Deck('Biology');
Pack.Biology.Cards.push(new Card({
    title: '–ú—É–∂—á–∏–Ω–∞',
    icon: 'üë§',
    text: '–ú—É–∂—á–∏–Ω–∞ 30 –ª–µ—Ç'
}));
//–ó–¥–æ—Ä–æ–≤—å–µ
Pack.Health = new Deck('Health');
Pack.Health.Cards.push(new Card({
    title: '–°–ª–µ–ø–æ–π',
    icon: 'üëé',
    text: '–° —Ä–æ–∂–¥–µ–Ω–∏—è —Å–ª–µ–ø–æ–π'
}));
Pack.Health.Cards.push(new Card({
    title: '–ì–ª—É—Ö–æ–Ω–µ–º–æ–π',
    icon: 'üëé',
    text: '–° —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–µ —Å–ª—ã—à–∏—Ç'
}));
Pack.Health.Cards.push(new Card({
    title: '–ó–¥–æ—Ä–æ–≤',
    icon: 'üí™',
    text: '–ü—Ä–µ–¥—Å—Ç–∞–≤—å —á—Ç–æ —ç—Ç–æ–π –∫–∞—Ä—Ç—ã –Ω–µ—Ç'
}));
//–ü—Ä–æ—Ñ–µ—Å—Å–∏—è
Pack.Profession = new Deck('Profession');
Pack.Profession.Cards.push(new Card({
    title: '–®–∞—Ö—Ç–µ—Ä',
    icon: '‚õè',
    text: '–£–≥–ª–µ–¥–æ–±—ã–≤–∞–Ω–∏–µ ‚Äî —Ç–≤–æ—ë –≤—Å—ë'
}));
Pack.Profession.Cards.push(new Card({
    title: '–í–æ–µ–Ω–Ω—ã–π',
    icon: 'üî´',
    text: '–û–≥–Ω–µ—Å—Ç—Ä–µ–ª—å–Ω–æ–µ –∏ —Ö–æ–ª–æ–¥–Ω–æ–µ –æ—Ä—É–∂–∏–µ ‚Äî —Ç–≤–æ–π –∫–æ–Ω—ë–∫'
}));
//–§–∞–∫—Ç—ã
Pack.Facts = new Deck('Facts');
Pack.Facts.Cards.push(new Card({
    title: '–ó–Ω–∞–µ—Ç –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–∞',
    icon: 'üîé',
    text: '–ï—Å–ª–∏ –ø–æ–¥ —Ä—É–∫–æ–π –±—É–¥–µ—Ç —Ç–µ–ª–µ—Ñ–æ–Ω, —Ç–æ —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–æ –Ω–∞–±—Ä–∞—Ç—å...'
}));
Pack.Facts.Cards.push(new Card({
    title: '–ù–µ –∑–∞–∫–æ–Ω—á–∏–ª —à–∫–æ–ª—É',
    icon: 'üîé',
    text: '–í—Ä–æ–¥–µ –∏ –Ω–∏—á–µ–≥–æ —Ç–∞–∫–æ–≥–æ, –Ω–æ —Å—Ç—ã–¥–Ω–æ'
}));
//–•–æ–±–±–∏
Pack.Hobby = new Deck('Hobby');
Pack.Hobby.Cards.push(new Card({
    title: '–ú—ã–ª–æ–≤–∞—Ä–µ–Ω–∏–µ',
    icon: '‚úçÔ∏è',
    text: '–ö—Ç–æ —É—Ä–æ–Ω–∏–ª –º—ã–ª–æ?'
}));
Pack.Hobby.Cards.push(new Card({
    title: '–õ–µ—Å–Ω–∏–∫',
    icon: '‚úçÔ∏è',
    text: '–ú–æ–∂–µ—Ç –≤—ã–∂–∏—Ç—å –≤ –ª–µ—Å—É'
}));
//–û—Å–æ–±—ã–µ —É—Å–ª–æ–≤–∏—è
Pack.Conditions = new Deck('Conditions');
Pack.Conditions.Cards.push(new Card({
    title: '–û–¥–∏–Ω –∑–∞ –≤—Å–µ—Ö –∏ –≤—Å–µ –ø—Ä–æ—Ç–∏–≤ –æ–¥–Ω–æ–≥–æ',
    icon: 'ü•æ',
    text: '–¢–≤–æ–π –≥–æ–ª–æ—Å —Ä–µ—à–∞–µ—Ç –∫–æ–≥–æ –≤—ã–≥–Ω–∞—Ç—å!'
}));
//–ë–∞–≥–∞–∂
Pack.Bagage = new Deck('Bagage');
Pack.Bagage.Cards.push(new Card({
    title: '–°–Ω–∞–π–ø–µ—Ä—Å–∫–∞—è –≤–∏–Ω—Ç–æ–≤–∫–∞',
    icon: 'üèπ',
    text: '–ü—Ä–∏ –ø–æ–º–æ—â–∏ –≤–∏–Ω—Ç–æ–≤–∫–∏ –º–æ–∂–Ω–æ –≤—ã—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ä–∞–≥–æ–≤ –∏ –æ—Ç—Å—Ç—Ä–µ–ª–∏–≤–∞—Ç—å –∏—Ö —Å –¥–∞–ª—å–Ω–µ–≥–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è'
}));
Pack.Bagage.Cards.push(new Card({
    title: '–ê–ø—Ç–µ—á–∫–∞',
    icon: '‚ûï',
    text: '–ê–ø—Ç–µ—á–∫–æ–π –∏–∑ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –º–∞–ª–æ —á—Ç–æ –≤—ã–ª–µ—á–∏—à—å, –Ω–æ —ç—Ç–æ –ª—É—á—à–µ, —á–µ–º –Ω–∏—á–µ–≥–æ'
}));

document.write('<hr>');

//–ë—É–Ω–∫–µ—Ä
Pack.Bunker = new Deck('Bunker');
Pack.Bunker.Cards.push(new Card({
    title: '–•–∏–º –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è',
    icon: '–ü–æ–º–µ—â–µ–Ω–∏–µ',
    text: '–í —ç—Ç–æ–º –ø–æ–º–µ—â–µ–Ω–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç—ã, –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è –Ω–∞–≤—ã–∫'
}));
//–ö–∞—Ç–∞–∫–ª–∏–∑–º
Pack.Cataclysm = new Deck('Cataclysm');
Pack.Cataclysm.Cards.push(new Card({
    title: '–ê—Ç–æ–º–Ω–∞—è –∑–∏–º–∞',
    icon: '–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞',
    text: '–ï—â—ë —á—É—Ç—å-—á—É—Ç—å –∏ –ø–æ –≤–∞–º –∑–∞–ø—É—Å—Ç—è—Ç –∞—Ç–æ–º–Ω—ã–µ –±–æ–º–±—ã!'
}));
//–£–≥—Ä–æ–∑–∞
Pack.Threat = new Deck('Threat');
Pack.Threat.Cards.push(new Card({
    title: '–ö—Ä—ã—Å—ã',
    icon: '–£–≥—Ä–æ–∑–∞',
    text: '–ö—Ä—ã—Å—ã –ø—Ä–æ–±—Ä–∞–ª–∏—Å—å –≤ –±—É–Ω–∫–µ—Ä —á–µ—Ä–µ–∑ –≤–µ–Ω—Ç–∏–ª–ª—è—Ü–∏—é'
}));

function Main() {
    Pack.Bagage.SetRnd();
    Pack.Conditions.SetRnd();
    Pack.Biology.SetRnd();
    Pack.Facts.SetRnd();
    Pack.Health.SetRnd();
    Pack.Hobby.SetRnd();
    Pack.Profession.SetRnd();
    Pack.Bunker.SetRnd();
    Pack.Cataclysm.SetRnd();
    Pack.Threat.SetRnd();
}